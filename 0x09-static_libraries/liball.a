!<arch>
0-isupper.c/    0           0     0     644     192       `
#include <stdio.h>
#include "main.h"
/**
 * _isupper - checks for uppercase
 * @c: stores char
 *
 * Return: 1 success, 0 otherwise
 */
int _isupper(int c)
{
	return (c >= 'A' && c <= 'Z');
}
0-memset.c/     0           0     0     644     269       `
#include "main.h"
/**
 * _memset - fills the memory
 * @s: memory area
 * @b: constant byte
 * @n: number of bytes to fill
 *
 * Return: s
 */
char *_memset(char *s, char b, unsigned int n)
{
	int i;

	i = 0;
	for (; n > 0; i++)
	{
		s[i] = b;
		n--;
	}
	return (s);
}

0-strcat.c/     0           0     0     644     342       `
#include "main.h"
#include <stdio.h>
/**
 * _strcat - joins two strings
 * @dest: destination
 * @src: source
 *
 * Return: dest
 */
char *_strcat(char *dest, char *src)
{
	int i;
	int j;

	i = 0;
	while (dest[i] != '\0')
	{
		i++;
	}
	j = 0;
	while (src[j] != '\0')
	{
		dest[i] = src[j];
		i++;
		j++;
	}
	dest[i] = '\0';
	return (dest);
}
100-atoi.c/     0           0     0     644     92        `
#include "main.h"
/**
 * _atoi - Entry
 * @s: input
 * Return: 0
 */
int _atoi(char *s)
{
}
1-isdigit.c/    0           0     0     644     204       `
#include <stdio.h>
#include "main.h"
/**
 * _isdigit - checks for digits 0 through 9
 * @c: stores the digit
 *
 * Return: 1 success, 0 otherwise
 */
int _isdigit(int c)
{
	return (c >= 48 && c <= 57);
}
1-memcpy.c/     0           0     0     644     288       `
#include "main.h"
/**
 * _memcpy - copies the memory
 * @dest: destination
 * @src: source
 * @n: number of bytes to copy
 *
 * Return: dest
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
	int i;

	i = 0;
	for (; n > 0; i++)
	{
		dest[i] = src[i];
		n--;
	}
	return (dest);
}
1-strncat.c/    0           0     0     644     407       `
#include "main.h"
#include <stdio.h>
/**
 * _strncat - join 2 strings
 * @dest: destination
 * @src: source
 * @n: no of bytes
 *
 * Return: dest
 */
char *_strncat(char *dest, char *src, int n)
{
	int i;
	int j;

	i = 0;
	while (dest[i] != '\0')
	{
		i++;
	}
	j = 0;
	while (j < n && src[j] != '\0')
	{
		dest[i] = src[j];
		i++;
		j++;
	}
	dest[i] = src[j];
	i++;
	j++;
	dest[i] = '\0';
	return (dest);
}

2-strchr.c/     0           0     0     644     279       `
#include "main.h"
#include <stdio.h>
/**
 * _strchr - locates a char in string
 * @s: string
 * @c: character to search
 *
 * Return: s or NULL
 */
char *_strchr(char *s, char c)
{
	int i;

	for (i = 0; s[i] >= '\0'; i++)
	{
		if (s[i] == c)
			return (&s[i]);
	}
	return (0);
}

2-strlen.c/     0           0     0     644     184       `
#include "main.h"
#include <stdio.h>
/**
 * _strlen - return length
 * @s: store length
 *
 * Return: 0
 */
int _strlen(char *s)
{
	int i;

	i = 0;
	while (*s++)
		i++;
	return (i);
}
2-strncpy.c/    0           0     0     644     337       `
#include "main.h"
#include <stdio.h>
/**
 * _strncpy - copy string
 * @dest: destination
 * @src: source
 * @n: integer
 *
 * Return: dest
 */
char *_strncpy(char *dest, char *src, int n)
{
	int j;

	j = 0;
	while (j < n && src[j] != '\0')
	{
		dest[j] = src[j];
		j++;
	}
	while (j < n)
	{
		dest[j] = '\0';
		j++;
	}
	return (dest);
}

3-islower.c/    0           0     0     644     230       `
#include <stdio.h>
#include "main.h"
/**
 * _islower - entry
 * @c: stores the character
 *
 * Return: 1 if lowercase, 0 if not.
 */
int _islower(int c)
{
	if (c >= 'a' && c <= 'z')
	{
		return (1);
	}
	else
	{
		return (0);
	}
}
3-puts.c/       0           0     0     644     191       `
#include "main.h"
#include <stdio.h>
/**
 * _puts - Print string
 * @str:  string to print
 */
void _puts(char *str)
{
	for (; *str != '\0'; str++)
	{
		_putchar(*str);
	}
	_putchar('\n');
}

3-strcmp.c/     0           0     0     644     293       `
#include "main.h"
/**
 * _strcmp - compare strings
 * @s1: string 1
 * @s2: string 2
 *
 * Return: s1[1] - s2[1]
 */
int _strcmp(char *s1, char *s2)
{
	int i;

	i = 0;
	while (s1[i] != '\0' && s2[1] != '\0')
	{
		if (s1[i] != s2[i])
		{
			return (s1[i] - s2[i]);
		}
		i++;
	}
	return (0);
}

3-strspn.c/     0           0     0     644     137       `
#include "main.h"
/**
 * _strspn - Entry
 * @s: input
 * @accept: input
 * Return: 0
 */
unsigned int _strspn(char *s, char *accept)
{
}

4-isalpha.c/    0           0     0     644     203       `
#include "main.h"
#include <stdio.h>
/**
 * _isalpha - entry
 * @c: character
 *
 * Return: 1 success, 0 otherwise
 */
int _isalpha(int c)
{
	return ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'));
}

4-strpbrk.c/    0           0     0     644     132       `
#include "main.h"
/**
 * _strpbrk - Entry
 * @s: input
 * @accept: input
 * Return: 0
 */
char *_strpbrk(char *s, char *accept)
{
}
5-strstr.c/     0           0     0     644     144       `
#include "main.h"
/**
 * _strstr - Entry
 * @haystack: input
 * @needle: input
 * Return: 0
 */
char *_strstr(char *haystack, char *needle)
{
}
6-abs.c/        0           0     0     644     202       `
#include <stdio.h>
#include "main.h"
/**
 * _abs - find absolute value of an integer
 * @i: store int
 *
 * Return: 0
 */
int _abs(int i)
{
	if (i >= 0)
	{
		return (i);
	}
	else
	{
		return (-i);
	}
}
9-strcpy.c/     0           0     0     644     131       `
#include "main.h"
/**
 * *_strcpy - Entry
 * @dest: input
 * @src: input
 * Return: 0
 */
char *_strcpy(char *dest, char *src)
{
}

_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

